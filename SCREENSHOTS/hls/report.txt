SmartHLS Summary Report for Project: decisiontreefinal.

Table of Contents
  1. RTL Interface
  2. Function and Loop Scheduling Results
  3. Memory Usage
  4. AXI4 Target Interface Address Map
  5. Resource Binding with Adaptive Latency


====== 1. RTL Interface ======

+---------------------------------------------------------------------------------------------------+
| RTL Interface Generated by SmartHLS                                                               |
+----------+----------------+---------------------------------+------------------+------------------+
| C++ Name | Interface Type | Signal Name                     | Signal Bit-width | Signal Direction |
+----------+----------------+---------------------------------+------------------+------------------+
|          | Clock & Reset  | clk (positive edge)             | 1                | input            |
|          |                | reset (synchronous active high) | 1                | input            |
+----------+----------------+---------------------------------+------------------+------------------+
|          | Control        | finish                          | 1                | output           |
|          |                | ready                           | 1                | output           |
|          |                | return_val                      | 3                | output           |
|          |                | start                           | 1                | input            |
+----------+----------------+---------------------------------+------------------+------------------+
| x        | Scalar Memory  | x_f0_read_data                  | 1                | input            |
|          |                | x_f1_read_data                  | 1                | input            |
|          |                | x_f2_read_data                  | 1                | input            |
|          |                | x_f3_read_data                  | 1                | input            |
|          |                | x_f4_read_data                  | 1                | input            |
|          |                | x_f5_read_data                  | 10               | input            |
|          |                | x_f6_read_data                  | 10               | input            |
|          |                | x_f7_read_data                  | 7                | input            |
+----------+----------------+---------------------------------+------------------+------------------+

The Verilog top-level module ports that are not listed in the above table are unused. Please tie the unused input ports to 0.

====== 2. Function and Loop Scheduling Results ======

+-------------------------------------------------------------------------------------+
| Function: decision_tree                                                             |
+----------------------------------+------------------------------+-------------------+
| Loop                             | Location In Source           | Iteration Latency |
+----------------------------------+------------------------------+-------------------+
| for.loop:decision_tree.cpp:106:5 | line 0 of ?                  | 4                 |
| for.loop:decision_tree.cpp:88:5  | line 88 of decision_tree.cpp | 3 / 18            |
+----------------------------------+------------------------------+-------------------+


Some trip counts could not be found. You can get more accurate scheduling results by providing them via the `bounds` pragma.
More details can be found here: https://microchiptech.github.io/fpga-hls-docs/pragmas.html#bound-loop

====== 3. Memory Usage ======

+----------------+
| Local Memories |
+----------------+
| None           |
+----------------+

+-------------------------+
| Local Constant Memories |
+-------------------------+
| None                    |
+-------------------------+

+-----------------------+
| Shared Local Memories |
+-----------------------+
| None                  |
+-----------------------+

+------------------+
| Aliased Memories |
+------------------+
| None             |
+------------------+

+-------------------------------------------------------------------------------------------------------+
| I/O Memories                                                                                          |
+------+-----------------------+----------------------+-------------+------------+-------+--------------+
| Name | Accessing Function(s) | Type                 | Size [Bits] | Data Width | Depth | Read Latency |
+------+-----------------------+----------------------+-------------+------------+-------+--------------+
| x_f0 | decision_tree         | Register (Read-Only) | 0           | 1          | 0     | 0            |
| x_f1 | decision_tree         | Register (Read-Only) | 0           | 1          | 0     | 0            |
| x_f2 | decision_tree         | Register (Read-Only) | 0           | 1          | 0     | 0            |
| x_f3 | decision_tree         | Register (Read-Only) | 0           | 1          | 0     | 0            |
| x_f4 | decision_tree         | Register (Read-Only) | 0           | 1          | 0     | 0            |
| x_f5 | decision_tree         | Register (Read-Only) | 0           | 10         | 0     | 0            |
| x_f6 | decision_tree         | Register (Read-Only) | 0           | 10         | 0     | 0            |
| x_f7 | decision_tree         | Register (Read-Only) | 0           | 7          | 0     | 0            |
+------+-----------------------+----------------------+-------------+------------+-------+--------------+


====== 4. AXI4 Target Interface Address Map ======

Compatibility of HLS accelerator with reference SoC features: No.
SoC feature is only supported for PolarFire SoC Icicle Kit, and all accelerator interfaces need to be either axi_target or axi_initiator:
  - The interfaces of the following argument(s), global variable(s), and/or module control are not axi_target or axi_initiator:
    module control, x.


====== 5. Resource Binding with Adaptive Latency ======

Binding to resource with adaptive latency is disabled.
You can enable this feature by setting config parameter 'ADAPTIVE_LATENCY_BINDING' to 1.


